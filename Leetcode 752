class Solution:
    def openLock(self, deadends: List[str], target: str) -> int:
        if '0000' in deadends:
            return -1 
        
        visited = set()
        queue = collections.deque(['0000'])
        deadends = set(deadends)
        steps = 0
        while queue:
            length = len(queue)
            for _ in range(length):
                curr = queue.popleft()
                if curr == target:
                    return steps
                for i in range(4):
                    for move in (1, -1):
                        curr_digit = (int(curr[i]) + move) % 10
                        new_string = curr[:i] + str(curr_digit) + curr[i+1:]
                        
                        if new_string not in visited and new_string not in deadends:
                            visited.add(new_string)
                            queue.append(new_string)
            steps += 1
        
        return -1
